{"version":3,"sources":["intersection.js"],"names":["console","log","appearOptions","threshold","rootMargin","appearOnScroll","IntersectionObserver","entries","forEach","entry","isIntersecting","target","classList","add","unobserve","faders","fader","observe"],"mappings":"AAAA,aACAA,QAAQC,IAAI,YAEZ,IAAMC,cAAgB,CACpBC,UAAW,EACXC,WAAY,qBAGRC,eAAiB,IAAIC,sBAAsB,SAC7CC,EACAF,GAEFE,EAAQC,SAAQ,SAAAC,GACTA,EAAMC,iBAGTD,EAAME,OAAOC,UAAUC,IAAI,UAC3BR,EAAeS,UAAUL,EAAME,QAEnC,GACF,GACAT,eAEAa,OAAOP,SAAQ,SAAAQ,GACbX,eAAeY,QAAQD,EACzB","file":"intersection.js","sourcesContent":["// Intersection Observer\nconsole.log('Hi there');\n\nconst appearOptions = {\n  threshold: 1,\n  rootMargin: \"0px 0px 100px 0px\"\n};\n\nconst appearOnScroll = new IntersectionObserver (function(\n    entries, \n    appearOnScroll\n) {\n  entries.forEach(entry => {\n    if (!entry.isIntersecting) {\n      return;\n    } else {\n      entry.target.classList.add('appear');\n      appearOnScroll.unobserve(entry.target);\n    }\n  });\n}, \nappearOptions);\n\nfaders.forEach(fader => {\n  appearOnScroll.observe(fader);\n});"]}