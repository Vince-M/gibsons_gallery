{"version":3,"sources":["script.js"],"names":["console","log","btnOpen","document","querySelector","btnClose","menuTopNav","overlay","breakpoint","window","matchMedia","faders","querySelectorAll","setupTopNav","matches","setAttribute","closeMobileMenu","removeAttribute","openMobileMenu","style","transitionDuration","main","footer","bodyScrollLock","disableBodyScroll","focus","enableBodyScroll","setTimeout","addEventListener","appearOptions","threshold","rootMargin","appearOnScroll","IntersectionObserver","entries","forEach","entry","isIntersecting","target","classList","add","unobserve","fader","observe"],"mappings":"AAAA,aAAAA,QAAQC,IAAI,SAEZ,IAAMC,QAAUC,SAASC,cAAc,YACjCC,SAAWF,SAASC,cAAc,aAClCE,WAAaH,SAASC,cAAc,eACpCG,QAAUJ,SAASC,cAAc,YACjCI,WAAaC,OAAOC,WAAW,qBAC/BC,OAASR,SAASS,iBAAiB,YAEnCC,YAAc,WACZL,WAAWM,QAEfR,WAAWS,aAAa,QAAS,KAGjCC,kBACAV,WAAWW,gBAAgB,SAE/B,EAYA,SAASC,iBAEPhB,QAAQa,aAAa,gBAAiB,QACtCT,WAAWW,gBAAgB,SAC3BX,WAAWa,MAAMC,mBAAqB,QACtCb,QAAQY,MAAMC,mBAAqB,QACnCC,KAAKN,aAAa,QAAS,IAC3BO,OAAOP,aAAa,QAAS,IAC7BQ,eAAeC,kBAAkBlB,YACjCD,SAASoB,OACX,CAEA,SAAST,kBAEPd,QAAQa,aAAa,gBAAiB,SACtCT,WAAWS,aAAa,QAAS,IACjCM,KAAKJ,gBAAgB,SACrBK,OAAOL,gBAAgB,SACvBM,eAAeG,iBAAiBpB,YAChCJ,QAAQuB,QAERE,YAAW,WACTrB,WAAWW,gBAAgB,SAC3BV,QAAQU,gBAAgB,QAC1B,GAAG,IACL,CAnCAJ,cAEAX,QAAQ0B,iBAAiB,QAASV,gBAClCb,SAASuB,iBAAiB,QAASZ,iBAEnCR,WAAWoB,iBAAiB,UAAU,WAErCf,aACD,IAiCA,IAAMgB,cAAgB,CACpBC,UAAW,EACXC,WAAY,qBAGRC,eAAiB,IAAIC,sBAAsB,SAC7CC,EACAF,GAEFE,EAAQC,SAAQ,SAAAC,GACTA,EAAMC,iBAGTD,EAAME,OAAOC,UAAUC,IAAI,UAC3BR,EAAeS,UAAUL,EAAME,QAEnC,GACF,GACAT,eAEAlB,OAAOwB,SAAQ,SAAAO,GACbV,eAAeW,QAAQD,EACzB","file":"script.js","sourcesContent":["console.log('Hello');\n\nconst btnOpen = document.querySelector('#btnOpen');\nconst btnClose = document.querySelector('#btnClose');\nconst menuTopNav = document.querySelector('#menuTopNav');\nconst overlay = document.querySelector('#overlay');\nconst breakpoint = window.matchMedia('(width < 43.75em)');\nconst faders = document.querySelectorAll(\".fade-in\");\n\nconst setupTopNav = () => {\n    if (breakpoint.matches) {\n    // console.log('is mobile');\n    menuTopNav.setAttribute('inert', '');\n  } else {\n    // console.log('is tablet/desktop');\n    closeMobileMenu();\n    menuTopNav.removeAttribute('inert');\n  }\n};\n\nsetupTopNav();\n\nbtnOpen.addEventListener('click', openMobileMenu);\nbtnClose.addEventListener('click', closeMobileMenu);\n\nbreakpoint.addEventListener('change', () => {\n//  console.log('breakpoint crossed');\n setupTopNav();\n});\n\nfunction openMobileMenu() {\n  // console.log('run openMobileMenu');\n  btnOpen.setAttribute('aria-expanded', 'true');\n  menuTopNav.removeAttribute('inert');\n  menuTopNav.style.transitionDuration = '400ms';\n  overlay.style.transitionDuration = '400ms';\n  main.setAttribute('inert', '');\n  footer.setAttribute('inert', '');\n  bodyScrollLock.disableBodyScroll(menuTopNav);\n  btnClose.focus();\n}\n\nfunction closeMobileMenu() {\n  // console.log('run closeMobileMenu');\n  btnOpen.setAttribute('aria-expanded', 'false');\n  menuTopNav.setAttribute('inert', '');\n  main.removeAttribute('inert');\n  footer.removeAttribute('inert');\n  bodyScrollLock.enableBodyScroll(menuTopNav);\n  btnOpen.focus();\n  \n  setTimeout(() => {\n    menuTopNav.removeAttribute('style');\n    overlay.removeAttribute('style');\n  }, 500);\n}\n\n\n\n// Intersection Observer\n\nconst appearOptions = {\n  threshold: 1,\n  rootMargin: \"0px 0px 100px 0px\"\n};\n\nconst appearOnScroll = new IntersectionObserver (function(\n    entries, \n    appearOnScroll\n) {\n  entries.forEach(entry => {\n    if (!entry.isIntersecting) {\n      return;\n    } else {\n      entry.target.classList.add('appear');\n      appearOnScroll.unobserve(entry.target);\n    }\n  });\n}, \nappearOptions);\n\nfaders.forEach(fader => {\n  appearOnScroll.observe(fader);\n});"]}